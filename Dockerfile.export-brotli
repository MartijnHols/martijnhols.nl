# =========== GLOBAL ARGS ===========
# Global ARGs can be used in any `FROM` but must be redeclared after each `FROM` stage (stages will use global values by default).
# Martijn's note: I tried using the latest (1.27.4), but I kept getting build
# errors. I figured there's not going to be a diff between a patch version, so
# I just used the article's version.
ARG NGINX_TAG=1.27.3-alpine3.20-slim
ARG ALPINE_VERSION=3.20
ARG NGINX_VERSION=1.27.3

# =========== NGINX BUILDER STAGE ===========
# (compiles linked brotli modules)
FROM alpine:${ALPINE_VERSION} AS nginx-builder
# Redeclare the ARG we need in this stage
ARG NGINX_VERSION
RUN apk add --no-cache \
    build-base \
    pcre-dev \
    zlib-dev \
    openssl-dev \
    wget \
    git \
    brotli-dev
WORKDIR /app
RUN echo "Building nginx version: $NGINX_VERSION" \
    && wget "https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz" \
    && tar -zxf "nginx-${NGINX_VERSION}.tar.gz" \
    && ln -s "nginx-${NGINX_VERSION}" nginx \
    && git clone --recurse-submodules -j8 https://github.com/google/ngx_brotli \
    && cd nginx \
    && ./configure --with-compat --add-dynamic-module=../ngx_brotli \
    && make modules

# =========== RUNTIME STAGE ===========
# (assumes an alpine-based image)
FROM nginx:${NGINX_TAG} AS runtime
# install the brotli runtime libraries
RUN apk add --no-cache brotli-libs
COPY --from=nginx-builder /app/nginx/objs/ngx_http_brotli_static_module.so /etc/nginx/modules/
COPY --from=nginx-builder /app/nginx/objs/ngx_http_brotli_filter_module.so /etc/nginx/modules/
# Configure nginx to use brotli modules
# command appends to existing nginx.conf
RUN printf 'load_module modules/ngx_http_brotli_filter_module.so;\n\
load_module modules/ngx_http_brotli_static_module.so;\n\
%s' "$(cat /etc/nginx/nginx.conf)" > /etc/nginx/nginx.conf
    
COPY out /usr/share/nginx/html
COPY nginx.conf /etc/nginx/conf.d/default.conf
